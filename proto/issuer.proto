syntax = "proto3";

package api;

service IssuerService {
  rpc CreateIssuer(IssuerRequest) returns (IssuerResponse) {};
  rpc ListIssuers(ListIssuerRequest) returns (ListIssuerCollection) {};
  rpc Ping (PingRequest) returns (PingResponse) { }
}
message ListIssuerRequest {}
message ListIssuerCollection {
  repeated IssuerRequest field = 1;
}

message IssuerResponse {}
message IssuerRequest {
  oneof dns_solvers {
     LetsEncryptIssuerRequest acme_issuer = 1;
     SelfSignedIssuerRequest self_signed_issuer = 2;
  }
}

message LetsEncryptIssuerRequest {
  string name = 1;
  string email = 2;
  string server = 3;
  repeated Solver solvers = 4;
}
message Solver {
  oneof dns_solvers {
     CloudFlareSolver cloud_flare_solver = 1;
     GoogleCloudSolver google_cloud_solver = 2;
  }
}
message CloudFlareSolver {
  string email = 1;
  string apikey = 2;
}
message GoogleCloudSolver {
  string email = 1;
  bytes sa = 2;
}
message SelfSignedIssuerRequest {
  string name = 1;
}

// A request for ping
message PingRequest {
    string msg = 1;
}

// A response for ping
message PingResponse {
    string msg = 2;
}

