syntax = "proto3";
option go_package = "github.com/menta2l/lcm";
import "google/protobuf/empty.proto";
package lcm;

message IssuerRequest {
  string name = 1;
  oneof issuer {
     LetsEncryptIssuerRequest lets_encrypt_issuer = 2;
     SelfSignedIssuerRequest self_signed_issuer = 3;
  }
}

message LetsEncryptIssuerRequest {
  string email = 1;
  string server = 2;
  string solverRef = 3;
}
message Solver {
  string name = 1;
  string email = 2;
  oneof dns_solvers {
     CloudFlareSolver cloud_flare_solver = 3;
     GoogleCloudSolver google_cloud_solver = 4;
  }
}
message SolverShort {
  string name = 1;
  string type = 2;
}
message CloudFlareSolver {
  string apikey = 2;
}
message GoogleCloudSolver {
  bytes sa = 2;
  string project = 3;
}
message SelfSignedIssuerRequest {
}
message ListSolversRequest {}
message ListSolversResponse {
  repeated SolverShort solver =1;
}
// Request for a certificate to be issued
message CertificateRequest {
    string name       = 1;
    string issuer_ref = 2;
    repeated string domain = 3;
}
message CertificateResponse {
    // A blob containing the cert
    string certificate = 1;
    // A blob containing the private key
    string privateKey = 2;
    // The DNS names this certificate is valid for
    repeated string domains = 3;
}

service Lcm {
  rpc Listsolvers(ListSolversRequest) returns (ListSolversResponse) {};
  rpc CreateSolver(Solver) returns (google.protobuf.Empty) {};

  rpc CreateIssuer(IssuerRequest) returns (google.protobuf.Empty) {};
  rpc RequestCertificate(CertificateRequest) returns (google.protobuf.Empty) {};
}
