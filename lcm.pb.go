// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lcm.proto

package lcm

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IssuerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssuerResponse) Reset()         { *m = IssuerResponse{} }
func (m *IssuerResponse) String() string { return proto.CompactTextString(m) }
func (*IssuerResponse) ProtoMessage()    {}
func (*IssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{0}
}

func (m *IssuerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuerResponse.Unmarshal(m, b)
}
func (m *IssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuerResponse.Marshal(b, m, deterministic)
}
func (m *IssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuerResponse.Merge(m, src)
}
func (m *IssuerResponse) XXX_Size() int {
	return xxx_messageInfo_IssuerResponse.Size(m)
}
func (m *IssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IssuerResponse proto.InternalMessageInfo

type IssuerRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to DnsSolvers:
	//	*IssuerRequest_LetsEncryptIssuer
	//	*IssuerRequest_SelfSignedIssuer
	DnsSolvers           isIssuerRequest_DnsSolvers `protobuf_oneof:"dns_solvers"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *IssuerRequest) Reset()         { *m = IssuerRequest{} }
func (m *IssuerRequest) String() string { return proto.CompactTextString(m) }
func (*IssuerRequest) ProtoMessage()    {}
func (*IssuerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{1}
}

func (m *IssuerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuerRequest.Unmarshal(m, b)
}
func (m *IssuerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuerRequest.Marshal(b, m, deterministic)
}
func (m *IssuerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuerRequest.Merge(m, src)
}
func (m *IssuerRequest) XXX_Size() int {
	return xxx_messageInfo_IssuerRequest.Size(m)
}
func (m *IssuerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IssuerRequest proto.InternalMessageInfo

func (m *IssuerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isIssuerRequest_DnsSolvers interface {
	isIssuerRequest_DnsSolvers()
}

type IssuerRequest_LetsEncryptIssuer struct {
	LetsEncryptIssuer *LetsEncryptIssuerRequest `protobuf:"bytes,2,opt,name=lets_encrypt_issuer,json=letsEncryptIssuer,proto3,oneof"`
}

type IssuerRequest_SelfSignedIssuer struct {
	SelfSignedIssuer *SelfSignedIssuerRequest `protobuf:"bytes,3,opt,name=self_signed_issuer,json=selfSignedIssuer,proto3,oneof"`
}

func (*IssuerRequest_LetsEncryptIssuer) isIssuerRequest_DnsSolvers() {}

func (*IssuerRequest_SelfSignedIssuer) isIssuerRequest_DnsSolvers() {}

func (m *IssuerRequest) GetDnsSolvers() isIssuerRequest_DnsSolvers {
	if m != nil {
		return m.DnsSolvers
	}
	return nil
}

func (m *IssuerRequest) GetLetsEncryptIssuer() *LetsEncryptIssuerRequest {
	if x, ok := m.GetDnsSolvers().(*IssuerRequest_LetsEncryptIssuer); ok {
		return x.LetsEncryptIssuer
	}
	return nil
}

func (m *IssuerRequest) GetSelfSignedIssuer() *SelfSignedIssuerRequest {
	if x, ok := m.GetDnsSolvers().(*IssuerRequest_SelfSignedIssuer); ok {
		return x.SelfSignedIssuer
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*IssuerRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*IssuerRequest_LetsEncryptIssuer)(nil),
		(*IssuerRequest_SelfSignedIssuer)(nil),
	}
}

type LetsEncryptIssuerRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Server               string   `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	SolverRef            string   `protobuf:"bytes,3,opt,name=solverRef,proto3" json:"solverRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LetsEncryptIssuerRequest) Reset()         { *m = LetsEncryptIssuerRequest{} }
func (m *LetsEncryptIssuerRequest) String() string { return proto.CompactTextString(m) }
func (*LetsEncryptIssuerRequest) ProtoMessage()    {}
func (*LetsEncryptIssuerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{2}
}

func (m *LetsEncryptIssuerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LetsEncryptIssuerRequest.Unmarshal(m, b)
}
func (m *LetsEncryptIssuerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LetsEncryptIssuerRequest.Marshal(b, m, deterministic)
}
func (m *LetsEncryptIssuerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LetsEncryptIssuerRequest.Merge(m, src)
}
func (m *LetsEncryptIssuerRequest) XXX_Size() int {
	return xxx_messageInfo_LetsEncryptIssuerRequest.Size(m)
}
func (m *LetsEncryptIssuerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LetsEncryptIssuerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LetsEncryptIssuerRequest proto.InternalMessageInfo

func (m *LetsEncryptIssuerRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LetsEncryptIssuerRequest) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *LetsEncryptIssuerRequest) GetSolverRef() string {
	if m != nil {
		return m.SolverRef
	}
	return ""
}

type Solver struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Types that are valid to be assigned to DnsSolvers:
	//	*Solver_CloudFlareSolver
	//	*Solver_GoogleCloudSolver
	DnsSolvers           isSolver_DnsSolvers `protobuf_oneof:"dns_solvers"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Solver) Reset()         { *m = Solver{} }
func (m *Solver) String() string { return proto.CompactTextString(m) }
func (*Solver) ProtoMessage()    {}
func (*Solver) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{3}
}

func (m *Solver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Solver.Unmarshal(m, b)
}
func (m *Solver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Solver.Marshal(b, m, deterministic)
}
func (m *Solver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Solver.Merge(m, src)
}
func (m *Solver) XXX_Size() int {
	return xxx_messageInfo_Solver.Size(m)
}
func (m *Solver) XXX_DiscardUnknown() {
	xxx_messageInfo_Solver.DiscardUnknown(m)
}

var xxx_messageInfo_Solver proto.InternalMessageInfo

func (m *Solver) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type isSolver_DnsSolvers interface {
	isSolver_DnsSolvers()
}

type Solver_CloudFlareSolver struct {
	CloudFlareSolver *CloudFlareSolver `protobuf:"bytes,2,opt,name=cloud_flare_solver,json=cloudFlareSolver,proto3,oneof"`
}

type Solver_GoogleCloudSolver struct {
	GoogleCloudSolver *GoogleCloudSolver `protobuf:"bytes,3,opt,name=google_cloud_solver,json=googleCloudSolver,proto3,oneof"`
}

func (*Solver_CloudFlareSolver) isSolver_DnsSolvers() {}

func (*Solver_GoogleCloudSolver) isSolver_DnsSolvers() {}

func (m *Solver) GetDnsSolvers() isSolver_DnsSolvers {
	if m != nil {
		return m.DnsSolvers
	}
	return nil
}

func (m *Solver) GetCloudFlareSolver() *CloudFlareSolver {
	if x, ok := m.GetDnsSolvers().(*Solver_CloudFlareSolver); ok {
		return x.CloudFlareSolver
	}
	return nil
}

func (m *Solver) GetGoogleCloudSolver() *GoogleCloudSolver {
	if x, ok := m.GetDnsSolvers().(*Solver_GoogleCloudSolver); ok {
		return x.GoogleCloudSolver
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Solver) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Solver_CloudFlareSolver)(nil),
		(*Solver_GoogleCloudSolver)(nil),
	}
}

type SolverShort struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SolverShort) Reset()         { *m = SolverShort{} }
func (m *SolverShort) String() string { return proto.CompactTextString(m) }
func (*SolverShort) ProtoMessage()    {}
func (*SolverShort) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{4}
}

func (m *SolverShort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SolverShort.Unmarshal(m, b)
}
func (m *SolverShort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SolverShort.Marshal(b, m, deterministic)
}
func (m *SolverShort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SolverShort.Merge(m, src)
}
func (m *SolverShort) XXX_Size() int {
	return xxx_messageInfo_SolverShort.Size(m)
}
func (m *SolverShort) XXX_DiscardUnknown() {
	xxx_messageInfo_SolverShort.DiscardUnknown(m)
}

var xxx_messageInfo_SolverShort proto.InternalMessageInfo

func (m *SolverShort) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SolverShort) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CloudFlareSolver struct {
	Apikey               string   `protobuf:"bytes,2,opt,name=apikey,proto3" json:"apikey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudFlareSolver) Reset()         { *m = CloudFlareSolver{} }
func (m *CloudFlareSolver) String() string { return proto.CompactTextString(m) }
func (*CloudFlareSolver) ProtoMessage()    {}
func (*CloudFlareSolver) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{5}
}

func (m *CloudFlareSolver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudFlareSolver.Unmarshal(m, b)
}
func (m *CloudFlareSolver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudFlareSolver.Marshal(b, m, deterministic)
}
func (m *CloudFlareSolver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudFlareSolver.Merge(m, src)
}
func (m *CloudFlareSolver) XXX_Size() int {
	return xxx_messageInfo_CloudFlareSolver.Size(m)
}
func (m *CloudFlareSolver) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudFlareSolver.DiscardUnknown(m)
}

var xxx_messageInfo_CloudFlareSolver proto.InternalMessageInfo

func (m *CloudFlareSolver) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

type GoogleCloudSolver struct {
	Sa                   []byte   `protobuf:"bytes,2,opt,name=sa,proto3" json:"sa,omitempty"`
	Project              string   `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleCloudSolver) Reset()         { *m = GoogleCloudSolver{} }
func (m *GoogleCloudSolver) String() string { return proto.CompactTextString(m) }
func (*GoogleCloudSolver) ProtoMessage()    {}
func (*GoogleCloudSolver) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{6}
}

func (m *GoogleCloudSolver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleCloudSolver.Unmarshal(m, b)
}
func (m *GoogleCloudSolver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleCloudSolver.Marshal(b, m, deterministic)
}
func (m *GoogleCloudSolver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleCloudSolver.Merge(m, src)
}
func (m *GoogleCloudSolver) XXX_Size() int {
	return xxx_messageInfo_GoogleCloudSolver.Size(m)
}
func (m *GoogleCloudSolver) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleCloudSolver.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleCloudSolver proto.InternalMessageInfo

func (m *GoogleCloudSolver) GetSa() []byte {
	if m != nil {
		return m.Sa
	}
	return nil
}

func (m *GoogleCloudSolver) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type SelfSignedIssuerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfSignedIssuerRequest) Reset()         { *m = SelfSignedIssuerRequest{} }
func (m *SelfSignedIssuerRequest) String() string { return proto.CompactTextString(m) }
func (*SelfSignedIssuerRequest) ProtoMessage()    {}
func (*SelfSignedIssuerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{7}
}

func (m *SelfSignedIssuerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfSignedIssuerRequest.Unmarshal(m, b)
}
func (m *SelfSignedIssuerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfSignedIssuerRequest.Marshal(b, m, deterministic)
}
func (m *SelfSignedIssuerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfSignedIssuerRequest.Merge(m, src)
}
func (m *SelfSignedIssuerRequest) XXX_Size() int {
	return xxx_messageInfo_SelfSignedIssuerRequest.Size(m)
}
func (m *SelfSignedIssuerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfSignedIssuerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelfSignedIssuerRequest proto.InternalMessageInfo

type CreateSolverRequest struct {
	Solver               *Solver  `protobuf:"bytes,1,opt,name=solver,proto3" json:"solver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSolverRequest) Reset()         { *m = CreateSolverRequest{} }
func (m *CreateSolverRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSolverRequest) ProtoMessage()    {}
func (*CreateSolverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{8}
}

func (m *CreateSolverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSolverRequest.Unmarshal(m, b)
}
func (m *CreateSolverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSolverRequest.Marshal(b, m, deterministic)
}
func (m *CreateSolverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSolverRequest.Merge(m, src)
}
func (m *CreateSolverRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSolverRequest.Size(m)
}
func (m *CreateSolverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSolverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSolverRequest proto.InternalMessageInfo

func (m *CreateSolverRequest) GetSolver() *Solver {
	if m != nil {
		return m.Solver
	}
	return nil
}

type CreateSolverResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSolverResponse) Reset()         { *m = CreateSolverResponse{} }
func (m *CreateSolverResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSolverResponse) ProtoMessage()    {}
func (*CreateSolverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{9}
}

func (m *CreateSolverResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSolverResponse.Unmarshal(m, b)
}
func (m *CreateSolverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSolverResponse.Marshal(b, m, deterministic)
}
func (m *CreateSolverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSolverResponse.Merge(m, src)
}
func (m *CreateSolverResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSolverResponse.Size(m)
}
func (m *CreateSolverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSolverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSolverResponse proto.InternalMessageInfo

type ListSolversRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSolversRequest) Reset()         { *m = ListSolversRequest{} }
func (m *ListSolversRequest) String() string { return proto.CompactTextString(m) }
func (*ListSolversRequest) ProtoMessage()    {}
func (*ListSolversRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{10}
}

func (m *ListSolversRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSolversRequest.Unmarshal(m, b)
}
func (m *ListSolversRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSolversRequest.Marshal(b, m, deterministic)
}
func (m *ListSolversRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSolversRequest.Merge(m, src)
}
func (m *ListSolversRequest) XXX_Size() int {
	return xxx_messageInfo_ListSolversRequest.Size(m)
}
func (m *ListSolversRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSolversRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSolversRequest proto.InternalMessageInfo

type ListSolversResponse struct {
	Solver               []*SolverShort `protobuf:"bytes,1,rep,name=solver,proto3" json:"solver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListSolversResponse) Reset()         { *m = ListSolversResponse{} }
func (m *ListSolversResponse) String() string { return proto.CompactTextString(m) }
func (*ListSolversResponse) ProtoMessage()    {}
func (*ListSolversResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{11}
}

func (m *ListSolversResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSolversResponse.Unmarshal(m, b)
}
func (m *ListSolversResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSolversResponse.Marshal(b, m, deterministic)
}
func (m *ListSolversResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSolversResponse.Merge(m, src)
}
func (m *ListSolversResponse) XXX_Size() int {
	return xxx_messageInfo_ListSolversResponse.Size(m)
}
func (m *ListSolversResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSolversResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSolversResponse proto.InternalMessageInfo

func (m *ListSolversResponse) GetSolver() []*SolverShort {
	if m != nil {
		return m.Solver
	}
	return nil
}

// Request for a certificate to be issued
type CertificateRequest struct {
	IssuerRef            string   `protobuf:"bytes,1,opt,name=issuer_ref,json=issuerRef,proto3" json:"issuer_ref,omitempty"`
	Domain               []string `protobuf:"bytes,2,rep,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateRequest) Reset()         { *m = CertificateRequest{} }
func (m *CertificateRequest) String() string { return proto.CompactTextString(m) }
func (*CertificateRequest) ProtoMessage()    {}
func (*CertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{12}
}

func (m *CertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateRequest.Unmarshal(m, b)
}
func (m *CertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateRequest.Marshal(b, m, deterministic)
}
func (m *CertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateRequest.Merge(m, src)
}
func (m *CertificateRequest) XXX_Size() int {
	return xxx_messageInfo_CertificateRequest.Size(m)
}
func (m *CertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateRequest proto.InternalMessageInfo

func (m *CertificateRequest) GetIssuerRef() string {
	if m != nil {
		return m.IssuerRef
	}
	return ""
}

func (m *CertificateRequest) GetDomain() []string {
	if m != nil {
		return m.Domain
	}
	return nil
}

type CertificateResponse struct {
	// A blob containing the cert
	Certificate string `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	// A blob containing the private key
	PrivateKey string `protobuf:"bytes,2,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	// The DNS names this certificate is valid for
	Domains              []string `protobuf:"bytes,3,rep,name=domains,proto3" json:"domains,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificateResponse) Reset()         { *m = CertificateResponse{} }
func (m *CertificateResponse) String() string { return proto.CompactTextString(m) }
func (*CertificateResponse) ProtoMessage()    {}
func (*CertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cf1c4246d481985, []int{13}
}

func (m *CertificateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateResponse.Unmarshal(m, b)
}
func (m *CertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateResponse.Marshal(b, m, deterministic)
}
func (m *CertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateResponse.Merge(m, src)
}
func (m *CertificateResponse) XXX_Size() int {
	return xxx_messageInfo_CertificateResponse.Size(m)
}
func (m *CertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateResponse proto.InternalMessageInfo

func (m *CertificateResponse) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *CertificateResponse) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *CertificateResponse) GetDomains() []string {
	if m != nil {
		return m.Domains
	}
	return nil
}

func init() {
	proto.RegisterType((*IssuerResponse)(nil), "lcm.IssuerResponse")
	proto.RegisterType((*IssuerRequest)(nil), "lcm.IssuerRequest")
	proto.RegisterType((*LetsEncryptIssuerRequest)(nil), "lcm.LetsEncryptIssuerRequest")
	proto.RegisterType((*Solver)(nil), "lcm.Solver")
	proto.RegisterType((*SolverShort)(nil), "lcm.SolverShort")
	proto.RegisterType((*CloudFlareSolver)(nil), "lcm.CloudFlareSolver")
	proto.RegisterType((*GoogleCloudSolver)(nil), "lcm.GoogleCloudSolver")
	proto.RegisterType((*SelfSignedIssuerRequest)(nil), "lcm.SelfSignedIssuerRequest")
	proto.RegisterType((*CreateSolverRequest)(nil), "lcm.CreateSolverRequest")
	proto.RegisterType((*CreateSolverResponse)(nil), "lcm.CreateSolverResponse")
	proto.RegisterType((*ListSolversRequest)(nil), "lcm.ListSolversRequest")
	proto.RegisterType((*ListSolversResponse)(nil), "lcm.ListSolversResponse")
	proto.RegisterType((*CertificateRequest)(nil), "lcm.CertificateRequest")
	proto.RegisterType((*CertificateResponse)(nil), "lcm.CertificateResponse")
}

func init() { proto.RegisterFile("lcm.proto", fileDescriptor_7cf1c4246d481985) }

var fileDescriptor_7cf1c4246d481985 = []byte{
	// 614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xcd, 0x4e, 0xdb, 0x40,
	0x10, 0x26, 0x09, 0x4d, 0xe5, 0x31, 0xa0, 0x30, 0xa6, 0xc1, 0x20, 0xa8, 0x22, 0xf7, 0x12, 0xf5,
	0x00, 0x52, 0xaa, 0x1e, 0x5a, 0xa9, 0xaa, 0x04, 0xa2, 0x05, 0x11, 0xa9, 0x92, 0x73, 0xeb, 0xc5,
	0x32, 0xce, 0x38, 0xb8, 0x5d, 0xff, 0xb0, 0xbb, 0x41, 0xe2, 0x45, 0xfa, 0x38, 0x7d, 0x87, 0xbe,
	0x51, 0xe5, 0xdd, 0x75, 0xb0, 0x9d, 0x70, 0xf3, 0x7c, 0xdf, 0xf8, 0x9b, 0x99, 0x6f, 0xc6, 0x06,
	0x8b, 0x45, 0xe9, 0x59, 0xc1, 0x73, 0x99, 0x63, 0x8f, 0x45, 0xa9, 0x37, 0x80, 0xbd, 0x1b, 0x21,
	0x96, 0xc4, 0x7d, 0x12, 0x45, 0x9e, 0x09, 0xf2, 0xfe, 0x75, 0x60, 0xb7, 0x82, 0x1e, 0x96, 0x24,
	0x24, 0x22, 0x6c, 0x67, 0x61, 0x4a, 0x6e, 0x67, 0xd4, 0x19, 0x5b, 0xbe, 0x7a, 0xc6, 0x1f, 0xe0,
	0x30, 0x92, 0x22, 0xa0, 0x2c, 0xe2, 0x4f, 0x85, 0x0c, 0x12, 0xf5, 0x86, 0xdb, 0x1d, 0x75, 0xc6,
	0xf6, 0xe4, 0xf4, 0xac, 0xac, 0x32, 0x25, 0x29, 0xae, 0x34, 0xdd, 0xd0, 0xbb, 0xde, 0xf2, 0xf7,
	0x59, 0x9b, 0xc3, 0x29, 0xa0, 0x20, 0x16, 0x07, 0x22, 0x59, 0x64, 0x34, 0xaf, 0xf4, 0x7a, 0x4a,
	0xef, 0x44, 0xe9, 0xcd, 0x88, 0xc5, 0x33, 0xc5, 0xb6, 0xe5, 0x06, 0xa2, 0x45, 0x5d, 0xec, 0x82,
	0x3d, 0xcf, 0x44, 0x20, 0x72, 0xf6, 0x48, 0x5c, 0x78, 0x31, 0xb8, 0x2f, 0x75, 0x83, 0x07, 0xf0,
	0x8a, 0xd2, 0x30, 0x61, 0x66, 0x3c, 0x1d, 0xe0, 0x10, 0xfa, 0x82, 0xf8, 0xa3, 0x19, 0xc9, 0xf2,
	0x4d, 0x84, 0x27, 0x60, 0x69, 0x51, 0x9f, 0x62, 0xd5, 0x9d, 0xe5, 0x3f, 0x03, 0xde, 0xdf, 0x0e,
	0xf4, 0x67, 0x2a, 0x7a, 0x41, 0xf6, 0x0a, 0x30, 0x62, 0xf9, 0x72, 0x1e, 0xc4, 0x2c, 0xe4, 0x64,
	0xfa, 0x33, 0xae, 0xbd, 0x51, 0x53, 0x5e, 0x96, 0xf4, 0xb7, 0x92, 0xd5, 0x42, 0xe5, 0x78, 0x51,
	0x0b, 0xc3, 0x6b, 0x70, 0x16, 0x79, 0xbe, 0x60, 0x14, 0x68, 0x35, 0xa3, 0xa3, 0xdd, 0x1a, 0x2a,
	0x9d, 0xef, 0x8a, 0x57, 0x6a, 0x2b, 0xa1, 0xfd, 0x45, 0x1b, 0x6c, 0x1b, 0xf5, 0x11, 0x6c, 0x4d,
	0xcc, 0xee, 0x73, 0xbe, 0x79, 0xf3, 0x08, 0xdb, 0xf2, 0xa9, 0x20, 0xe3, 0x8b, 0x7a, 0xf6, 0xde,
	0xc3, 0xa0, 0xdd, 0x77, 0xe9, 0x60, 0x58, 0x24, 0xbf, 0xe9, 0xa9, 0x72, 0x50, 0x47, 0xde, 0x17,
	0xd8, 0x5f, 0xeb, 0x0d, 0xf7, 0xa0, 0x2b, 0x42, 0x95, 0xb8, 0xe3, 0x77, 0x45, 0x88, 0x2e, 0xbc,
	0x2e, 0x78, 0xfe, 0x8b, 0x22, 0x69, 0x4c, 0xae, 0x42, 0xef, 0x08, 0x0e, 0x5f, 0x38, 0x04, 0xef,
	0x33, 0x38, 0x97, 0x9c, 0x42, 0x69, 0x3a, 0xa8, 0x16, 0xfc, 0x0e, 0xfa, 0xc6, 0x9f, 0x8e, 0xf2,
	0xc7, 0xd6, 0xd7, 0xa4, 0x73, 0x0c, 0xe5, 0x0d, 0xe1, 0xa0, 0xf9, 0xae, 0xf9, 0x1a, 0x0e, 0x00,
	0xa7, 0x89, 0x90, 0x1a, 0x15, 0x55, 0xa5, 0xaf, 0xe0, 0x34, 0x50, 0x9d, 0x8c, 0xe3, 0x5a, 0xa5,
	0xde, 0xd8, 0x9e, 0x0c, 0x6a, 0x95, 0x94, 0xa1, 0xab, 0x72, 0xb7, 0x80, 0x97, 0xc4, 0x65, 0x12,
	0x27, 0x51, 0x28, 0xa9, 0xea, 0xf4, 0x14, 0x40, 0xdf, 0x7d, 0xc0, 0x29, 0x36, 0xa6, 0x5b, 0x89,
	0x99, 0x31, 0x2e, 0x1d, 0x9d, 0xe7, 0x69, 0x98, 0x64, 0x6e, 0x77, 0xd4, 0x2b, 0x1d, 0xd5, 0x91,
	0xf7, 0x00, 0x4e, 0x43, 0xcc, 0x74, 0x33, 0x02, 0x3b, 0x7a, 0x86, 0x8d, 0x5c, 0x1d, 0xc2, 0xb7,
	0x00, 0x05, 0x4f, 0x1e, 0x43, 0x49, 0xb7, 0xab, 0x35, 0xd5, 0x90, 0x72, 0x0b, 0xba, 0x84, 0x70,
	0x7b, 0xaa, 0x62, 0x15, 0x4e, 0xfe, 0x74, 0xa1, 0x37, 0x8d, 0x52, 0xbc, 0x00, 0xbb, 0x34, 0xc2,
	0x9c, 0x0f, 0x1e, 0xea, 0x0f, 0x7f, 0xcd, 0xb0, 0x63, 0x77, 0x9d, 0x30, 0x06, 0x6f, 0xe1, 0x15,
	0xec, 0xd4, 0xad, 0x47, 0x9d, 0xbb, 0x61, 0x93, 0xc7, 0x47, 0x1b, 0x98, 0x95, 0xcc, 0xa7, 0x4a,
	0xc6, 0xfc, 0x50, 0x50, 0x25, 0x37, 0x2e, 0xe4, 0xd8, 0x69, 0x60, 0xab, 0x57, 0x6f, 0x00, 0x4d,
	0x46, 0xcd, 0x47, 0x33, 0xcc, 0xfa, 0x9a, 0xcc, 0x30, 0x1b, 0x2c, 0xf7, 0xb6, 0x2e, 0xdc, 0x9f,
	0xc3, 0x45, 0x22, 0xef, 0x97, 0x77, 0x67, 0x51, 0x9e, 0x9e, 0xa7, 0x94, 0xc9, 0x70, 0xc2, 0xce,
	0x59, 0x94, 0xde, 0xf5, 0xd5, 0x5f, 0xf7, 0xc3, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xd3,
	0x60, 0x5e, 0x82, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LcmClient is the client API for Lcm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LcmClient interface {
	Listsolvers(ctx context.Context, in *ListSolversRequest, opts ...grpc.CallOption) (*ListSolversResponse, error)
	CreateSolver(ctx context.Context, in *CreateSolverRequest, opts ...grpc.CallOption) (*CreateSolverResponse, error)
	CreateIssuer(ctx context.Context, in *IssuerRequest, opts ...grpc.CallOption) (*IssuerResponse, error)
	RequestCertificate(ctx context.Context, in *CertificateRequest, opts ...grpc.CallOption) (*CertificateResponse, error)
}

type lcmClient struct {
	cc *grpc.ClientConn
}

func NewLcmClient(cc *grpc.ClientConn) LcmClient {
	return &lcmClient{cc}
}

func (c *lcmClient) Listsolvers(ctx context.Context, in *ListSolversRequest, opts ...grpc.CallOption) (*ListSolversResponse, error) {
	out := new(ListSolversResponse)
	err := c.cc.Invoke(ctx, "/lcm.Lcm/Listsolvers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lcmClient) CreateSolver(ctx context.Context, in *CreateSolverRequest, opts ...grpc.CallOption) (*CreateSolverResponse, error) {
	out := new(CreateSolverResponse)
	err := c.cc.Invoke(ctx, "/lcm.Lcm/CreateSolver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lcmClient) CreateIssuer(ctx context.Context, in *IssuerRequest, opts ...grpc.CallOption) (*IssuerResponse, error) {
	out := new(IssuerResponse)
	err := c.cc.Invoke(ctx, "/lcm.Lcm/CreateIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lcmClient) RequestCertificate(ctx context.Context, in *CertificateRequest, opts ...grpc.CallOption) (*CertificateResponse, error) {
	out := new(CertificateResponse)
	err := c.cc.Invoke(ctx, "/lcm.Lcm/RequestCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LcmServer is the server API for Lcm service.
type LcmServer interface {
	Listsolvers(context.Context, *ListSolversRequest) (*ListSolversResponse, error)
	CreateSolver(context.Context, *CreateSolverRequest) (*CreateSolverResponse, error)
	CreateIssuer(context.Context, *IssuerRequest) (*IssuerResponse, error)
	RequestCertificate(context.Context, *CertificateRequest) (*CertificateResponse, error)
}

// UnimplementedLcmServer can be embedded to have forward compatible implementations.
type UnimplementedLcmServer struct {
}

func (*UnimplementedLcmServer) Listsolvers(ctx context.Context, req *ListSolversRequest) (*ListSolversResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Listsolvers not implemented")
}
func (*UnimplementedLcmServer) CreateSolver(ctx context.Context, req *CreateSolverRequest) (*CreateSolverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSolver not implemented")
}
func (*UnimplementedLcmServer) CreateIssuer(ctx context.Context, req *IssuerRequest) (*IssuerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIssuer not implemented")
}
func (*UnimplementedLcmServer) RequestCertificate(ctx context.Context, req *CertificateRequest) (*CertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestCertificate not implemented")
}

func RegisterLcmServer(s *grpc.Server, srv LcmServer) {
	s.RegisterService(&_Lcm_serviceDesc, srv)
}

func _Lcm_Listsolvers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSolversRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LcmServer).Listsolvers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lcm.Lcm/Listsolvers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LcmServer).Listsolvers(ctx, req.(*ListSolversRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lcm_CreateSolver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSolverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LcmServer).CreateSolver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lcm.Lcm/CreateSolver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LcmServer).CreateSolver(ctx, req.(*CreateSolverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lcm_CreateIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssuerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LcmServer).CreateIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lcm.Lcm/CreateIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LcmServer).CreateIssuer(ctx, req.(*IssuerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lcm_RequestCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LcmServer).RequestCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lcm.Lcm/RequestCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LcmServer).RequestCertificate(ctx, req.(*CertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lcm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lcm.Lcm",
	HandlerType: (*LcmServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Listsolvers",
			Handler:    _Lcm_Listsolvers_Handler,
		},
		{
			MethodName: "CreateSolver",
			Handler:    _Lcm_CreateSolver_Handler,
		},
		{
			MethodName: "CreateIssuer",
			Handler:    _Lcm_CreateIssuer_Handler,
		},
		{
			MethodName: "RequestCertificate",
			Handler:    _Lcm_RequestCertificate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lcm.proto",
}
